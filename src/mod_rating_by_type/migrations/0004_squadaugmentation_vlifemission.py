# -*- coding: utf-8 -*-
# Generated by Django 1.11.29 on 2022-10-22 16:58
from __future__ import unicode_literals

import django.contrib.postgres.fields
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import stats.models


class Migration(migrations.Migration):

    dependencies = [
        ('stats', '0036_pt_br'),
        ('mod_rating_by_type', '0003_no_ai_ak_tracking'),
    ]

    operations = [
        migrations.CreateModel(
            name='SquadAugmentation',
            fields=[
                ('squad', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, primary_key=True, related_name='SquadAugmentation_MOD_SPLIT_RANKINGS', serialize=False, to='stats.Squad')),
                ('best_ironman_score', models.IntegerField(db_index=True, default=0)),
                ('live_ironman_score', models.IntegerField(db_index=True, default=0)),
            ],
            options={
                'db_table': 'Squad_MOD_SPLIT_RANKINGS',
            },
        ),
        migrations.CreateModel(
            name='VLifeMission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cls', models.CharField(blank=True, choices=[('light', 'light'), ('medium', 'medium'), ('heavy', 'heavy'), ('generic', 'generic')], db_index=True, max_length=16)),
                ('date_first_sortie', models.DateTimeField(null=True)),
                ('date_last_sortie', models.DateTimeField(null=True)),
                ('date_last_combat', models.DateTimeField(null=True)),
                ('score', models.IntegerField(db_index=True, default=0)),
                ('ratio', models.FloatField(default=1)),
                ('sorties_total', models.IntegerField(db_index=True, default=0)),
                ('sorties_coal', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(default=0), default=stats.models.default_coal_list, size=None)),
                ('sorties_cls', django.contrib.postgres.fields.jsonb.JSONField(default=stats.models.default_sorties_cls)),
                ('coal_pref', models.IntegerField(choices=[(0, 'neutral'), (1, 'Allies'), (2, 'Axis')], default=0)),
                ('flight_time', models.BigIntegerField(db_index=True, default=0)),
                ('ammo', django.contrib.postgres.fields.jsonb.JSONField(default=stats.models.default_ammo)),
                ('accuracy', models.FloatField(db_index=True, default=0)),
                ('bailout', models.IntegerField(default=0)),
                ('wounded', models.IntegerField(default=0)),
                ('dead', models.IntegerField(default=0)),
                ('captured', models.IntegerField(default=0)),
                ('relive', models.IntegerField(db_index=True, default=0)),
                ('takeoff', models.IntegerField(default=0)),
                ('landed', models.IntegerField(default=0)),
                ('ditched', models.IntegerField(default=0)),
                ('crashed', models.IntegerField(default=0)),
                ('in_flight', models.IntegerField(default=0)),
                ('shotdown', models.IntegerField(default=0)),
                ('respawn', models.IntegerField(default=0)),
                ('disco', models.IntegerField(default=0)),
                ('ak_total', models.IntegerField(db_index=True, default=0)),
                ('ak_assist', models.IntegerField(default=0)),
                ('gk_total', models.IntegerField(db_index=True, default=0)),
                ('fak_total', models.IntegerField(default=0)),
                ('fgk_total', models.IntegerField(default=0)),
                ('killboard_pvp', django.contrib.postgres.fields.jsonb.JSONField(default=dict)),
                ('killboard_pve', django.contrib.postgres.fields.jsonb.JSONField(default=dict)),
                ('status', models.CharField(choices=[('landed', 'landed'), ('ditched', 'ditched'), ('crashed', 'crashed'), ('shotdown', 'shotdown'), ('not_takeoff', 'not takeoff'), ('in_flight', 'in flight')], default='not_takeoff', max_length=12)),
                ('aircraft_status', models.CharField(choices=[('unharmed', 'unharmed'), ('damaged', 'damaged'), ('destroyed', 'destroyed')], default='unharmed', max_length=12)),
                ('bot_status', models.CharField(choices=[('healthy', 'healthy'), ('wounded', 'wounded'), ('dead', 'dead')], default='healthy', max_length=12)),
                ('ce', models.FloatField(default=0)),
                ('kl', models.FloatField(default=0)),
                ('ks', models.FloatField(default=0)),
                ('khr', models.FloatField(default=0)),
                ('gkl', models.FloatField(default=0)),
                ('gks', models.FloatField(default=0)),
                ('gkhr', models.FloatField(default=0)),
                ('wl', models.FloatField(default=0)),
                ('score_heavy', models.IntegerField(db_index=True, default=0)),
                ('score_medium', models.IntegerField(db_index=True, default=0)),
                ('score_light', models.IntegerField(db_index=True, default=0)),
                ('mission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='stats.Mission')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='stats.Player')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='stats.Profile')),
                ('tour', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='stats.Tour')),
            ],
            options={
                'db_table': 'vlifes_mission_MOD_SPLIT_RANKINGS_',
                'ordering': ['-id'],
            },
        ),
    ]
